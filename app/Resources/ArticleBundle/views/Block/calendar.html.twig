<div class="rubric-page-control">
    {{ 'article.calendar.label_archive'| trans({}, 'ArticleBundle') }}
    <input id="datepicker" readonly="readonly" value="" aria-label="Use the arrow keys to pick a date">
    <script>
      var currentDate = new Date('{{ date|date("Y-m-d") }}');
      var picker = new Pikaday({
        field: document.getElementById('datepicker'),
        firstDay: 1,
        minDate: new Date(2007, 0, 1),
        maxDate: new Date(),
        yearRange: [2007,2020],
        format: 'D M, YYYY',
        toString(date, format) {
          var day = date.getDate();
          var month = this.i18n.months_ch[date.getMonth()];
          var year = date.getFullYear();
          return `${day} ${month}, ${year}`;
        },
        i18n: {
          previousMonth : '{{ 'article.calendar.previousMonth'| trans({}, 'ArticleBundle') }}',
          nextMonth     : '{{ 'article.calendar.nextMonth'| trans({}, 'ArticleBundle') }}',
          months        : [
            '{{ 'article.calendar.month.0'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.1'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.2'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.3'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.4'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.5'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.6'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.7'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.8'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.9'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.10'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.month.11'| trans({}, 'ArticleBundle') }}'
          ],
          months_ch     : [
            '{{ 'article.calendar.months_ch.0'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.1'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.2'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.3'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.4'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.5'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.6'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.7'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.8'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.9'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.10'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.months_ch.11'| trans({}, 'ArticleBundle') }}'
          ],
          weekdays      : [
            '{{ 'article.calendar.week.0'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.1'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.2'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.3'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.4'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.5'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.week.6'| trans({}, 'ArticleBundle') }}'
          ],
          weekdaysShort: [
            '{{ 'article.calendar.weekShort.0'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.1'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.2'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.3'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.4'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.5'| trans({}, 'ArticleBundle') }}',
            '{{ 'article.calendar.weekShort.6'| trans({}, 'ArticleBundle') }}'
          ],
        },
        disableDayFn: function(theDate) {
          var availableDays = picker.availableDays.getDays(picker.calendars[0].year,[picker.calendars[0].month+1]);
          return (availableDays.indexOf(theDate.getDate())<0?true:false);
        },
        onSelect: function() {
          var goto = '{{ path('articles_subcategory_archive', {
              category: spectopic and app.request.get('type') ? app.request.get('type')~'/'~spectopic.slug : app.request.get('category')|default,
              date: '\/00-00-0000'
          }) }}'.replace(/00-00-0000/g, (1*picker._d.getDate()>9?picker._d.getDate():'0'+picker._d.getDate())+'-'+(1*picker._d.getMonth()>8?picker._d.getMonth()+1:'0' +(picker._d.getMonth()+1))+'-'+picker._d.getFullYear());
          if(picker.availableDays.goToArchive() && goto) {
            window.location.href = goto;
          }
        }
      });
      picker.availableDays = function() {
        var goToArchive = 0,
          availableDates = {
            {{ date|date("Y") }}: {
              {{ date|date("m") }}: {{ calendar }}
            }
          },
          activeReq = 0;
        return {
          goToArchive: function() {
            var goto = goToArchive;
            if( goToArchive==0 ) {
              goToArchive = 1;
            }
            return goto;
          },
          getDays: function (year, month) {
            var prevMonth = month-1,
              prevYear = year;
            if(month<2) {
              prevMonth = 12;
              prevYear= year-1;
            }
            // подгружаем данные за предыдущий месяц
            if (!activeReq && (!availableDates[prevYear] || !availableDates[prevYear][prevMonth]) ) {
              activeReq = 1;
              xAjax({
                url: '{{ path('articles_archive_calendar_dates', {'category': spectopic ? 'spectopic'~spectopic.id : category.id|default}) }}',
                type: 'GET',
                data: {year: prevYear, month: prevMonth},
                dataFormat: 'JSON',
                async: false,
                success: function (result) {
                  activeReq = 0;
                  if(!availableDates[prevYear]) {
                    availableDates[prevYear] = {}
                  }
                  availableDates[prevYear][prevMonth] = result;
                }
              });

            }
            return availableDates[year][month] == undefined ? [] : availableDates[year][month];
          }
        }
      }();
      picker.setDate(currentDate);
    </script>
</div>
